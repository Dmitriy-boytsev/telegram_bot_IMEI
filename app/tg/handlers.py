import requests
from telegram import Update

from app.core.config import settings
from app.core.db.database_utils import get_user_by_telegram_id
from app.core.db.session import async_session


async def handle_message(update: Update, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ IMEI."""
    async with async_session() as db:
        user_id = update.effective_user.id
        user = await get_user_by_telegram_id(db, user_id)

        if not user or not user.is_whitelisted:
            await update.message.reply_text("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í—ã –Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.")
            return

    imei = update.message.text
    max_retries = 3

    for attempt in range(max_retries):
        try:
            response = requests.post(
                settings.LOCAL_API_URL,
                headers={"Authorization": f"Bearer {settings.API_TOKEN}", "Content-Type": "application/json"},
                json={"imei": imei, "serviceid": 15},
            )

            if response.status_code in {200, 201}:
                data = response.json().get("details", {})
                if not data:
                    await update.message.reply_text("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± IMEI –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                    return

                result = "<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:</b>\n"
                for key, value in data.items():
                    if isinstance(value, bool):
                        value = "–î–∞" if value else "–ù–µ—Ç"
                    result += f"üîπ <b>{key}:</b> {value}\n"

                await update.message.reply_text(result, parse_mode="HTML")
                return
            else:
                if attempt == max_retries - 1:
                    await update.message.reply_text(
                        f"–û—à–∏–±–∫–∞: {response.status_code} -- {response.text}. –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
                    )
                    return
        except Exception as e:
            if attempt == max_retries - 1:
                await update.message.reply_text(f"–û—à–∏–±–∫–∞: {str(e)}. –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.")
                return
